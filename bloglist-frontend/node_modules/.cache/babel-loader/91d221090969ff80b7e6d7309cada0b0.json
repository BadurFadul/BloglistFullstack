{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bador\\\\Desktop\\\\bloglist\\\\bloglist-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [user, setUser] = useState(null);\n  const blogFormRef = useRef();\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handlelogout = event => {\n    event.preventDefault();\n    setErrorMessage(`${user.name} has loged out`);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 3500);\n    setUser(null);\n    window.localStorage.clear();\n  };\n\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisibility();\n    const newBlog = { ...blogObject,\n      user: user.token\n    };\n    console.log(newBlog);\n    blogService.create(newBlog).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n    });\n    setErrorMessage(`New blog ${newBlog.title} by ${newBlog.author} created`);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 3500);\n  };\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        name: \"Password\",\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n\n  const updatelikes = async (id, likeupdate) => {\n    try {\n      const updateblog = await blogService.update(id, likeupdate);\n      const newblogs = blogs.map(blog => blog.id === id ? updateblog : blog);\n      setBlogs(newblogs);\n    } catch (exception) {\n      setErrorMessage(\"error\" + exception.response.data.error);\n    }\n  };\n\n  const handledelete = async id => {\n    try {\n      blogService.deleteId(id);\n      const updatedBlogs = blogs.filter(blog => blog.id !== id);\n      setBlogs(updatedBlogs);\n      setErrorMessage(\"Blog removed\");\n    } catch (exception) {\n      setErrorMessage(\"error\" + exception.response.data.error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [errorMessage, user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlelogout,\n          children: \"log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 30\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new blog\",\n        ref: blogFormRef,\n        children: /*#__PURE__*/_jsxDEV(BlogForm, {\n          addblog: addBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 4\n      }, this), blogs.sort((a, b) => b.likes - a.likes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        user: user,\n        updateLikes: updatelikes,\n        deleteblog: handledelete\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"mCzvmRAPtdTKtnkk8K3BV/QBni8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bador/Desktop/bloglist/bloglist-frontend/src/App.js"],"names":["useState","useEffect","useRef","Blog","blogService","loginService","BlogForm","Togglable","App","blogs","setBlogs","username","setUsername","password","setPassword","errorMessage","setErrorMessage","user","setUser","blogFormRef","handleLogin","event","preventDefault","login","window","localStorage","setItem","JSON","stringify","setToken","token","exception","setTimeout","getAll","then","loggedUserJSON","getItem","parse","handlelogout","name","clear","addBlog","blogObject","current","toggleVisibility","newBlog","console","log","create","returnedBlog","concat","title","author","loginForm","target","value","updatelikes","id","likeupdate","updateblog","update","newblogs","map","blog","response","data","error","handledelete","deleteId","updatedBlogs","filter","sort","a","b","likes"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('') \r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n  const blogFormRef = useRef()\r\n  \r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      ) \r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    blogService\r\n    .getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handlelogout=(event)=>{\r\n    event.preventDefault()\r\n    setErrorMessage(`${user.name} has loged out`)\r\n    setTimeout(() => {setErrorMessage(null)}, 3500)\r\n    setUser(null)\r\n    window.localStorage.clear()\r\n  \r\n    }\r\n\r\n    const addBlog = (blogObject) => {\r\n      blogFormRef.current.toggleVisibility()\r\n      const newBlog = { ...blogObject, user: user.token }\r\n      console.log(newBlog)\r\n      blogService.create(newBlog).then(returnedBlog => {setBlogs(blogs.concat(returnedBlog))})\r\n      setErrorMessage(`New blog ${newBlog.title} by ${newBlog.author} created`)\r\n      setTimeout(() => {setErrorMessage(null)}, 3500)\r\n    }\r\n\r\n    const loginForm = () => (\r\n      <form onSubmit={handleLogin}>\r\n        <h2>log in to application</h2>\r\n        <div>\r\n          username\r\n            <input\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n            <input\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>      \r\n    )\r\n    const updatelikes = async (id, likeupdate) => {\r\n      try{\r\n        const updateblog = await blogService.update(id, likeupdate);\r\n        const newblogs = blogs.map((blog)=>\r\n          blog.id === id ? updateblog : blog\r\n        );\r\n        setBlogs(newblogs)\r\n      } catch (exception) {\r\n        setErrorMessage(\"error\" + exception.response.data.error)\r\n      }\r\n    }\r\n\r\nconst handledelete = async (id) =>{\r\n  try{\r\n    blogService.deleteId(id);\r\n    const updatedBlogs = blogs.filter((blog) => blog.id !== id);\r\n      setBlogs(updatedBlogs);\r\n      setErrorMessage(\"Blog removed\");\r\n  } catch (exception) {\r\n    setErrorMessage(\"error\" + exception.response.data.error);\r\n  }\r\n}\r\n\r\n\r\nreturn (\r\n  \r\n  <div>\r\n  {errorMessage}\r\n  {\r\n    user ===null?\r\n    loginForm():\r\n    <div>\r\n    <h2>blogs</h2>\r\n    <p>{user.name} logged in <button onClick={handlelogout}>log out</button> </p>\r\n   <Togglable buttonLabel='new blog'ref={blogFormRef} >\r\n    <BlogForm addblog={addBlog} />\r\n   </Togglable>\r\n    {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\r\n      <Blog key={blog.id} blog={blog}  user={user} updateLikes={updatelikes} deleteblog={handledelete}/> \r\n    )}\r\n    </div>\r\n  } \r\n</div>\r\n)\r\n\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}